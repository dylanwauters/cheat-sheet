
##Checklist voor troubleshooting
* Altijd een checklist gebruiken
* checklist up-to-date houden
* Nooit stappen overslaan (kabels nakijken enzo)
* Bottom-up volgens TCP/IP of OSI model
* Errors messages googlen
* Werk in kleine stapjes stap voor stap
* Test regelmatig.
* backup van de laatste werkende versie bijhouden
* Valideer configuratie bestanden 
* Weet naar welke logs je moet kijken
* Gebruik apart terminal venster om de logs in "realtime" weer te geven (`journalctl -f`)

##Werkwijze
## Network configuration

1. Fysical/data link layer
    - Is the cable plugged in? via virtual box --> netwerk -> optie aanvinken
    - Check Ethernet port lights
    - Test Ethernet cable
2. Network layer: local settings
    - Check **IP address**: `ip address` --> ip a
    - Is there a **default gateway**: `ip route`
    - Do we have **DNS servers**: `cat /etc/resolv.conf`
3. Network layer: remote
    - Ping default gateway (*)
    - Query DNS servers: `dig www.example.com @x.y.z.w`

(*) `Ping` doesn't always work, as some system administrators block ICMP traffic on their routers.

## Network services

An example for `httpd`, can be applied to other services. Assume you just did `systemctl start httpd.service`, but you still can't see your website.

Don't forget to validate the network configuration of the server!

1. Validate configuration file
    - `apachectl configtest`
2. Is the service running?
    - `sudo netstat -tlnp` (options: `t` = tcp, `l` = listening, `n` = show port numbers, `p` = show process)
    - `sudo systemctl status httpd.service`
3. Check the log files for error messages: `journalctl -b -u httpd`
4. Test local connection (using client software), e.g.
    - `wget http://localhost/`
    - `curl http://localhost/`
5. Test remote connection, e.g.
    - use client software
    - `sudo nmap -sS -p 80` (perform a TCP SYN scan on port 80 using `nmap`)
6. Check firewall settings
    - `sudo iptables -L -n -v`
    - TODO: check configuration, fix (using `firewalld`)

